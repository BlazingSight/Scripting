print("wait time no longer needed instantly starts when u get ur hp, added admin kick")

local plr = game.Players.LocalPlayer
local bp = plr.Backpack
local Char = plr.Character
local humrp = Char.HumanoidRootPart
local hum = Char.Humanoid
local SelfTool = game:GetService("Workspace").Shop["Self Punch $130"].Head.ClickDetector
local DuraTool = game:GetService("Workspace").Shop["Durability Training $130"].Head.ClickDetector
local starthp = hum.MaxHealth
local noclip
local allblacklist = false
local blacklist = {}
local baseplate
if not workspace:FindFirstChild("ALALALALABaseplate") then
    print("new baseplate")
    baseplate = Instance.new("Part",workspace)
    baseplate.Size = Vector3.new(3000,5,3000)
    baseplate.Anchored = true
    baseplate.CanCollide = true
    baseplate.Name = "ALALALALABaseplate"
end
for i,v in pairs(blacklist) do
    if plr.UserId == v then
        plr:Kick("BLACKLISTED!")
    end
end

if allblacklist then
    plr:Kick("PRIVATE SCRIPT NOW")
end
local function find(name)
    if not Char:FindFirstChild(name) and not bp:FindFirstChild(name) then
        return false
    else
        return true
    end
end

local function kickonsight(target)
    local role = target:GetRoleInGroup(4701945)
    if role == "Accepter" or role == "Helper" or role == "developer" or role == "Owner" then
        game.Players.LocalPlayer:Kick("FUCKING "..role.." IS IN GAME BRO LMAO")
    elseif table.find(blacklist,target.UserId) then
        game.Players.LocalPlayer:Kick("FUCKING "..target.Name.." IS IN GAME BRO LMAO")
    end
end

spawn(function()
    for i,v in pairs(game.Players:GetChildren()) do
       if v:IsA("Player") then
        kickonsight(v)
       end
    end
end)

---kick tp back
local prompt = assert(game:GetService("CoreGui"):FindFirstChild("promptOverlay", true), "Lol it should work :/")
assert(not prompt:FindFirstChild("ErrorPrompt"), prompt:FindFirstChild("ErrorPrompt") and wait(2) and game:GetService("TeleportService"):Teleport(game.PlaceId, game:GetService("Players").LocalPlayer))
prompt.ChildAdded:Connect(function(child)
   assert(child, typeof(child) == "Instance" and child.Name == "ErrorPrompt" and child.ClassName == "Frame" and wait(2) and game:GetService("TeleportService"):Teleport(game.PlaceId, game:GetService("Players").LocalPlayer))
end)
---
local function NoclipLoop()
--[[
    for _, child in pairs(game.Players.LocalPlayer.Character:GetDescendants()) do
        if child:IsA("BasePart") and child.CanCollide == true and child.Name ~= floatName then
            child.CanCollide = false
        end
    end]]--
end


local function autodura()
    if toggled then
        if not find("Self Punch") then
            repeat
                wait()
            fireclickdetector(SelfTool)
            until plr.Backpack:FindFirstChild("Self Punch") or Char:FindFirstChild("Self Punch")
        end
        while wait() do
            if toggled then
            repeat
                wait()
            fireclickdetector(DuraTool)
            until plr.Backpack:FindFirstChild("Durability Training") or Char:FindFirstChild("Durability Training")
            hum:EquipTool(bp["Durability Training"])
            Char:WaitForChild("Durability Training")
            Char["Durability Training"]:Activate()
            wait(.1)
            hum:EquipTool(bp["Self Punch"])
            Char:WaitForChild("Self Punch")
            repeat
                wait()
                spawn(function()
                    Char["Self Punch"]:Activate()
                    Char["Self Punch"]:Activate()
                    Char["Self Punch"]:Activate()
                    Char["Self Punch"]:Activate()
                    Char["Self Punch"]:Activate()
                    Char["Self Punch"]:Activate()
                    Char["Self Punch"]:Activate()
                    Char["Self Punch"]:Activate()
                    Char["Self Punch"]:Activate()
                    Char["Self Punch"]:Activate()
                    Char["Self Punch"]:Activate()
                    Char["Self Punch"]:Activate()
                end)
            until Char.Humanoid.Health <= 1.5 
            noclip:Disconnect()
            Char:BreakJoints()
            break
        else
            break
        end
        end
    else
        print("Total Hp gained:",hum.MaxHealth-starthp,"Maxhp:",hum.MaxHealth)
    end
end

print("Start Max Hp:",starthp)
noclip = game:GetService('RunService').Stepped:Connect(NoclipLoop)
autodura()
plr.CharacterAdded:Connect(function()
plr = game.Players.LocalPlayer
bp = plr.Backpack
Char = plr.Character
Char:WaitForChild("HumanoidRootPart")
humrp = Char.HumanoidRootPart
wait(.1)
baseplate.Position = humrp.Position+Vector3.new(-3000,92.556350708008,-300)
humrp.CFrame = CFrame.new(-1903.6256103516, 92.556350708008, -188.62586975098)
hum = Char.Humanoid
noclip = game:GetService('RunService').Stepped:Connect(NoclipLoop)
repeat wait() until hum.MaxHealth > 100
print("Total Hp gained:",hum.MaxHealth-starthp,"Maxhp:",hum.MaxHealth)
autodura()
end)
